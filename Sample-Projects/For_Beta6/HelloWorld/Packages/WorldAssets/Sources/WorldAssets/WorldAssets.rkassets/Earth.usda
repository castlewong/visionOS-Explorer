#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["", "", "", "Clouds", "Earth", "earth_004_clouds_resized"]
    def "Earth" (
        customData = {
            float3 rotationEulerHint = (-1.5707963, 0, 0)
        }
        references = @earth_sphere_equirectangular.usdc@
    )
    {
        reorder nameChildren = ["", "", "", "", "", "", "", "Sphere_001", "Clouds", "Earth_1", "cloud_layer", "Collider", "EarthWithClouds_SunPositionComponent", "Clouds2"]
        quatf xformOp:orient = (0.70710677, -0.7071067, 0, 0)
        float3 xformOp:scale = (2, 2, 2)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Sphere" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Earth> (
                bindMaterialAs = "weakerThanDescendants"
            )
            quatf xformOp:orient = (0.70710677, -0.7071067, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        over "Sphere_001" (
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (-1.5707963, 0, 0)
            }
        )
        {
            rel material:binding = </Root/Earth/Earth> (
                bindMaterialAs = "weakerThanDescendants"
            )
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.50249994, 0.50249994, 0.50249994)
                float radius = 0.25124997
                token shapeType = "Sphere"
            }
        }

        def Material "Earth" (
            active = true
        )
        {
            reorder nameChildren = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "UsdPreviewSurface", "dot", "dot2", "base_color", "emissive", "MaterialXPreviewSurface2", "roughness", "normals", "multiply2", "pi", "Oneminus", "Combine3", "DotProduct", "Normal", "vector_from_float", "Multiply", "Constant", "Multiply_1", "Multiply_2", "Subtract", "Multiply_3", "pan_uvs", "texcoord", "Image", "Multiply_4", "cloud_opacity_modifier", "Screen", "almost_white"]
            float inputs:cloud_pan_speed = 0.0007 (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (-1264.289, -416.9925)
                        float2 sizeInSubgraph = (179, 43)
                        int stackingOrderInSubgraph = 4740
                    }
                }
            )
            float inputs:sun_angle = 0.25 (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (-1015.18835, 561.2635)
                        float2 sizeInSubgraph = (132, 43)
                        int stackingOrderInSubgraph = 4755
                    }
                }
            )
            token outputs:mtlx:surface.connect = </Root/Earth/Earth/MaterialXPreviewSurface2.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:realitykit:vertex"]
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (473.06213, 98.61276)
            float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 89)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1105

            def Shader "UsdPreviewSurface" (
                active = true
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "dot"
            {
                uniform token info:id = "ND_dot_vector3"
                float3 inputs:in.connect = </Root/Earth/Earth/normals.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-524.9103, 11.306752)
                float2 ui:nodegraph:node:size = (44, 18)
                int ui:nodegraph:node:stackingOrder = 4022
            }

            def Shader "dot2"
            {
                uniform token info:id = "ND_dot_color3"
                color3f inputs:in.connect = </Root/Earth/Earth/Screen.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-215.31137, -58.45648)
                float2 ui:nodegraph:node:size = (44, 18)
                int ui:nodegraph:node:stackingOrder = 4612
            }

            def Shader "base_color"
            {
                uniform token info:id = "ND_image_color3"
                color3f inputs:default
                asset inputs:file = @M_earth_baseColor.png@
                string inputs:filtertype
                float2 inputs:texcoord
                string inputs:uaddressmode
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-1143.6326, -706.6233)
                float2 ui:nodegraph:node:size = (148.5, 189)
                int ui:nodegraph:node:stackingOrder = 4712
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:uaddressmode"]
            }

            def Shader "emissive"
            {
                uniform token info:id = "ND_image_color3"
                color3f inputs:default
                asset inputs:file = @M_earth_emissive.jpg@
                string inputs:filtertype
                float2 inputs:texcoord
                string inputs:uaddressmode
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-534.3439, 184.24103)
                float2 ui:nodegraph:node:size = (148.5, 189)
                int ui:nodegraph:node:stackingOrder = 4743
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:default", "inputs:texcoord", "inputs:vaddressmode"]
            }

            def Shader "MaterialXPreviewSurface2"
            {
                uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
                float inputs:clearcoat
                float inputs:clearcoatRoughness
                color3f inputs:diffuseColor.connect = </Root/Earth/Earth/dot2.outputs:out>
                color3f inputs:emissiveColor.connect = </Root/Earth/Earth/Multiply_1.outputs:out>
                float inputs:ior
                float inputs:metallic
                float3 inputs:normal.connect = </Root/Earth/Earth/Multiply_3.outputs:out>
                float inputs:occlusion
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness = 1
                float inputs:roughness.connect = None
                token outputs:out
                float2 ui:nodegraph:node:pos = (177.18837, 32.647778)
                float2 ui:nodegraph:node:size = (215.5, 297)
                int ui:nodegraph:node:stackingOrder = 4742
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["Advanced", "inputs:metallic"]
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @M_earth_roughness.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-989.9846, -132.33618)
                float2 ui:nodegraph:node:size = (148.5, 189)
                int ui:nodegraph:node:stackingOrder = 3037
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "normals"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @M_earth_normal.png@
                string inputs:filtertype
                float2 inputs:texcoord
                string inputs:uaddressmode
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-1021.13446, 72.12626)
                float2 ui:nodegraph:node:size = (148.5, 189)
                int ui:nodegraph:node:stackingOrder = 4029
            }

            def Shader "multiply2"
            {
                uniform token info:id = "ND_multiply_color3FA"
                color3f inputs:in1.connect = </Root/Earth/Earth/emissive.outputs:out>
                float inputs:in2.connect = </Root/Earth/Earth/Multiply_2.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-235.42159, 87.752975)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 4744
            }

            def Shader "Oneminus"
            {
                uniform token info:id = "ND_realitykit_oneminus_float"
                float inputs:in.connect = </Root/Earth/Earth/roughness.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-741.58594, -22.648438)
                float2 ui:nodegraph:node:size = (158, 99)
                int ui:nodegraph:node:stackingOrder = 4741
            }

            def Shader "Combine3"
            {
                uniform token info:id = "ND_combine3_color3"
                float inputs:in1.connect = </Root/Earth/Earth/DotProduct.outputs:out>
                float inputs:in2.connect = </Root/Earth/Earth/DotProduct.outputs:out>
                float inputs:in3.connect = </Root/Earth/Earth/DotProduct.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-240.70544, 474.23)
                float2 ui:nodegraph:node:size = (145, 54)
                int ui:nodegraph:node:stackingOrder = 4756
            }

            def Shader "DotProduct"
            {
                uniform token info:id = "ND_dotproduct_vector3"
                float3 inputs:in1.connect = </Root/Earth/Earth/vector_from_float.outputs:Combine3_out>
                float3 inputs:in2.connect = </Root/Earth/Earth/Normal.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-529.7631, 591.72534)
                float2 ui:nodegraph:node:size = (153.5, 43)
                int ui:nodegraph:node:stackingOrder = 4624
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_normal_vector3"
                string inputs:space = "object"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-756.7153, 656.56464)
                float2 ui:nodegraph:node:size = (128.5, 30)
                int ui:nodegraph:node:stackingOrder = 4757
            }

            def NodeGraph "vector_from_float"
            {
                float inputs:Add_in1 (
                    customData = {
                        dictionary realitykit = {
                            float2 positionInSubgraph = (63.5, 356.25)
                            float2 sizeInSubgraph = (117.5, 43)
                            int stackingOrderInSubgraph = 2983
                        }
                    }
                )
                float inputs:Add_in1.connect = </Root/Earth/Earth.inputs:sun_angle>
                float3 outputs:Combine3_out.connect = </Root/Earth/Earth/vector_from_float/Combine3.outputs:out>
                float2 ui:nodegraph:node:pos = (-756.07855, 552.8739)
                float2 ui:nodegraph:node:size = (164, 99)
                int ui:nodegraph:node:stackingOrder = 4763
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1528.5, 35.5)
                float2 ui:nodegraph:realitykit:subgraphOutputs:size = (157.30437, 71)

                def Shader "Multiply"
                {
                    uniform token info:id = "ND_multiply_float"
                    float inputs:in1.connect = </Root/Earth/Earth/vector_from_float/Subtract2.outputs:out>
                    float inputs:in2.connect = </Root/Earth/Earth/vector_from_float/two_pi.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (638, 174.75)
                    float2 ui:nodegraph:node:size = (60, 36)
                    int ui:nodegraph:node:stackingOrder = 2981
                }

                def Shader "Add"
                {
                    uniform token info:id = "ND_add_float"
                    float inputs:in1.connect = </Root/Earth/Earth/vector_from_float.inputs:Add_in1>
                    float inputs:in2.connect = </Root/Earth/Earth/vector_from_float/offset.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (217.75, 283.25)
                    float2 ui:nodegraph:node:size = (61.5, 36)
                    int ui:nodegraph:node:stackingOrder = 2981
                }

                def Shader "Sin"
                {
                    uniform token info:id = "ND_sin_float"
                    float inputs:in.connect = </Root/Earth/Earth/vector_from_float/pi_over_2.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (1113.5, 174.75)
                    float2 ui:nodegraph:node:size = (116, 30)
                    int ui:nodegraph:node:stackingOrder = 2981
                }

                def Shader "Combine3"
                {
                    uniform token info:id = "ND_combine3_vector3"
                    float inputs:in1.connect = </Root/Earth/Earth/vector_from_float/Cos.outputs:out>
                    float inputs:in2.connect = </Root/Earth/Earth/vector_from_float/Sin.outputs:out>
                    float inputs:in3.connect = None
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (1304, 35.5)
                    float2 ui:nodegraph:node:size = (145, 54)
                    int ui:nodegraph:node:stackingOrder = 2986
                }

                def Shader "Subtract"
                {
                    uniform token info:id = "ND_subtract_float"
                    float inputs:in1.connect = </Root/Earth/Earth/vector_from_float/Multiply.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (758.75, 174.75)
                    float2 ui:nodegraph:node:size = (61.5, 36)
                    int ui:nodegraph:node:stackingOrder = 2984
                }

                def Shader "Cos"
                {
                    uniform token info:id = "ND_cos_float"
                    float inputs:in.connect = </Root/Earth/Earth/vector_from_float/pi_over_2.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (1130.7461, -5.5625)
                    float2 ui:nodegraph:node:size = (116, 30)
                    int ui:nodegraph:node:stackingOrder = 2981
                }

                def Shader "pi_over_2"
                {
                    uniform token info:id = "ND_constant_float"
                    float inputs:value = 1.570796
                    float inputs:value.connect = </Root/Earth/Earth/vector_from_float/Subtract.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (922.5, 174.75)
                    float2 ui:nodegraph:node:size = (146, 43)
                    int ui:nodegraph:node:stackingOrder = 2987
                }

                def Shader "Subtract2"
                {
                    uniform token info:id = "ND_subtract_float"
                    float inputs:in1.connect = </Root/Earth/Earth/vector_from_float/Add.outputs:out>
                    float inputs:in2.connect = </Root/Earth/Earth/vector_from_float/Floor.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (517.25, 268.75)
                    float2 ui:nodegraph:node:size = (61.5, 36)
                    int ui:nodegraph:node:stackingOrder = 2981
                }

                def Shader "Floor"
                {
                    uniform token info:id = "ND_floor_float"
                    float inputs:in.connect = </Root/Earth/Earth/vector_from_float/Add.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (374.7539, 312.6289)
                    float2 ui:nodegraph:node:size = (118, 30)
                    int ui:nodegraph:node:stackingOrder = 2981
                }

                def Shader "two_pi"
                {
                    uniform token info:id = "ND_constant_float"
                    float inputs:value = 6.28319
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (455.4375, 191.1836)
                    float2 ui:nodegraph:node:size = (127, 43)
                    int ui:nodegraph:node:stackingOrder = 2981
                }

                def Shader "offset"
                {
                    uniform token info:id = "ND_constant_float"
                    float inputs:value = 0.8
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (63.5, 253.25)
                    float2 ui:nodegraph:node:size = (121.5, 43)
                    int ui:nodegraph:node:stackingOrder = 2982
                }
            }

            def Shader "Multiply"
            {
                uniform token info:id = "ND_multiply_vector3FA"
                float3 inputs:in1.connect = </Root/Earth/Earth/dot.outputs:out>
                float inputs:in2 = 2
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-382.20312, 9.136719)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 4030
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Constant"
            {
                uniform token info:id = "ND_constant_float"
                float inputs:value = 0.1
                float outputs:out
                float2 ui:nodegraph:node:pos = (-287.78458, 247.26201)
                float2 ui:nodegraph:node:size = (141.5, 43)
                int ui:nodegraph:node:stackingOrder = 4762
            }

            def Shader "Multiply_1"
            {
                uniform token info:id = "ND_multiply_color3FA"
                color3f inputs:in1.connect = </Root/Earth/Earth/multiply2.outputs:out>
                float inputs:in2.connect = </Root/Earth/Earth/Constant.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-115.66391, 136.09091)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 4761
            }

            def Shader "Multiply_2"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/Earth/Earth/DotProduct.outputs:out>
                float inputs:in2 = -1
                float outputs:out
                float2 ui:nodegraph:node:pos = (-415.40244, 413.61984)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 4753
            }

            def Shader "Subtract"
            {
                uniform token info:id = "ND_subtract_vector3"
                float3 inputs:in1.connect = </Root/Earth/Earth/Multiply.outputs:out>
                float3 inputs:in2 = (1, 1, 1)
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-282.0731, 15.470109)
                float2 ui:nodegraph:node:size = (61.5, 36)
                int ui:nodegraph:node:stackingOrder = 4031
            }

            def Shader "Multiply_3"
            {
                uniform token info:id = "ND_multiply_vector3"
                float3 inputs:in1.connect = </Root/Earth/Earth/Subtract.outputs:out>
                float3 inputs:in2 = (0.02, 0.04, 1)
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-138.45883, 14.108262)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 4040
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def NodeGraph "pan_uvs"
            {
                float inputs:speed_multiplier = 1 (
                    customData = {
                        dictionary realitykit = {
                            float2 positionInSubgraph = (60.945312, 132.1211)
                            float2 sizeInSubgraph = (172.5, 43)
                            int stackingOrderInSubgraph = 4582
                        }
                    }
                )
                float inputs:speed_multiplier.connect = </Root/Earth/Earth.inputs:cloud_pan_speed>
                float2 inputs:texture_coordinates = (0, 0) (
                    customData = {
                        dictionary realitykit = {
                            float2 positionInSubgraph = (73.77344, 291.51172)
                            float2 sizeInSubgraph = (193, 43)
                            int stackingOrderInSubgraph = 4582
                        }
                    }
                )
                float2 inputs:texture_coordinates.connect = </Root/Earth/Earth/texcoord.outputs:out>
                float2 outputs:texture_coordinates.connect = </Root/Earth/Earth/pan_uvs/combine2.outputs:out>
                float2 ui:nodegraph:node:pos = (-1017.20624, -395.8632)
                float2 ui:nodegraph:node:size = (148.5, 117)
                int ui:nodegraph:node:stackingOrder = 4677
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:multiply2_in2"]
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1183.1229, 44.21488)
                float2 ui:nodegraph:realitykit:subgraphOutputs:size = (211.9964, 71)
                int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 4587

                def Shader "subtract"
                {
                    uniform token info:id = "ND_subtract_float"
                    float inputs:in1.connect = </Root/Earth/Earth/pan_uvs/multiply2.outputs:out>
                    float inputs:in2.connect = </Root/Earth/Earth/pan_uvs/floor.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (540.25, 118)
                    float2 ui:nodegraph:node:size = (61.5, 36)
                    int ui:nodegraph:node:stackingOrder = 4571
                }

                def Shader "add"
                {
                    uniform token info:id = "ND_add_float"
                    float inputs:in1.connect = </Root/Earth/Earth/pan_uvs/separate2.outputs:outx>
                    float inputs:in2.connect = </Root/Earth/Earth/pan_uvs/subtract.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (661.75, 148)
                    float2 ui:nodegraph:node:size = (61.5, 36)
                    int ui:nodegraph:node:stackingOrder = 4571
                }

                def Shader "combine2"
                {
                    uniform token info:id = "ND_combine2_vector2"
                    float inputs:in1.connect = </Root/Earth/Earth/pan_uvs/add.outputs:out>
                    float inputs:in2.connect = </Root/Earth/Earth/pan_uvs/separate2.outputs:outy>
                    float2 outputs:out
                    float2 ui:nodegraph:node:pos = (837.86664, 183.70155)
                    float2 ui:nodegraph:node:size = (142.5, 43)
                    int ui:nodegraph:node:stackingOrder = 4580
                }

                def Shader "separate2"
                {
                    uniform token info:id = "ND_separate2_vector2"
                    float2 inputs:in.connect = </Root/Earth/Earth/pan_uvs.inputs:texture_coordinates>
                    float outputs:outx
                    float outputs:outy
                    float2 ui:nodegraph:node:pos = (388.92914, 310.77417)
                    float2 ui:nodegraph:node:size = (113.5, 117)
                    int ui:nodegraph:node:stackingOrder = 4577
                }

                def Shader "floor"
                {
                    uniform token info:id = "ND_floor_float"
                    float inputs:in.connect = </Root/Earth/Earth/pan_uvs/multiply2.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (391, 101.5)
                    float2 ui:nodegraph:node:size = (116, 43)
                    int ui:nodegraph:node:stackingOrder = 4571
                }

                def Shader "multiply2"
                {
                    uniform token info:id = "ND_multiply_float"
                    float inputs:in1.connect = </Root/Earth/Earth/pan_uvs/time.outputs:out>
                    float inputs:in2.connect = </Root/Earth/Earth/pan_uvs.inputs:speed_multiplier>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (242.5, 108)
                    float2 ui:nodegraph:node:size = (60, 36)
                    int ui:nodegraph:node:stackingOrder = 4571
                }

                def Shader "time"
                {
                    uniform token info:id = "ND_time_float"
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (76.25, 61.75)
                    float2 ui:nodegraph:node:size = (124.5, 43)
                    int ui:nodegraph:node:stackingOrder = 4571
                }
            }

            def Shader "texcoord"
            {
                uniform token info:id = "ND_texcoord_vector2"
                float2 outputs:out
                float2 ui:nodegraph:node:pos = (-1265.5797, -351.8806)
                float2 ui:nodegraph:node:size = (180.5, 43)
                int ui:nodegraph:node:stackingOrder = 4700
            }

            def Shader "Screen"
            {
                uniform token info:id = "ND_screen_color3"
                color3f inputs:bg.connect = </Root/Earth/Earth/base_color.outputs:out>
                color3f inputs:fg.connect = </Root/Earth/Earth/Multiply_4.outputs:out>
                float inputs:mix.connect = </Root/Earth/Earth/Image.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-332.84357, -286.75262)
                float2 ui:nodegraph:node:size = (109, 135)
                int ui:nodegraph:node:stackingOrder = 4660
            }

            def Shader "almost_white"
            {
                uniform token info:id = "ND_constant_color3"
                color3f inputs:value = (0.878749, 0.878749, 0.878749) (
                    colorSpace = "Input - Texture - Linear - sRGB"
                )
                color3f inputs:value.connect = None
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-719.3949, -603.3245)
                float2 ui:nodegraph:node:size = (168.5, 43)
                int ui:nodegraph:node:stackingOrder = 4722
            }

            def Shader "Image"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @earthClouds_opacity.png@
                string inputs:filtertype
                prepend float2 inputs:texcoord.connect = </Root/Earth/Earth/pan_uvs.outputs:texture_coordinates>
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-806.23505, -359.168)
                float2 ui:nodegraph:node:size = (148.5, 189)
                int ui:nodegraph:node:stackingOrder = 4675
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:texcoord"]
            }

            def Shader "cloud_opacity_modifier"
            {
                uniform token info:id = "ND_constant_float"
                float inputs:value = 0.8
                float outputs:out
                float2 ui:nodegraph:node:pos = (-742.49744, -527.6512)
                float2 ui:nodegraph:node:size = (231, 43)
                int ui:nodegraph:node:stackingOrder = 4733
            }

            def Shader "Multiply_4"
            {
                uniform token info:id = "ND_multiply_color3FA"
                color3f inputs:in1.connect = </Root/Earth/Earth/almost_white.outputs:out>
                float inputs:in2.connect = </Root/Earth/Earth/cloud_opacity_modifier.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-551.1856, -572.2148)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 4728
            }
        }
    }
}

